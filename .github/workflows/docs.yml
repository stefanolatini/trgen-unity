# .github/workflows/docs.yml
name: Build & Deploy Docs

on:
  push:
    branches:
      - main
      - master

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinxsharp sphinxsharp-pro furo sphinxcontrib-matlabdomain sphinxcontrib-mermaid m2r2

      - name: Prepare directories
        run: |
          mkdir -p docs/source/_static
          mkdir -p docs/source/_templates
          mkdir -p public

      - name: Preprocess and convert README
        run: |
          echo "üìö Converting README to documentation..."
          rm -f docs/source/api/index.rst
          rm -rf docs/source/api/
          rm -f docs/source/installation.rst
          rm -f docs/source/quickstart.rst
          rm -f docs/source/examples.rst
          rm -f docs/source/changelog.rst

          if [ -f README.md ]; then
            echo "Converting README.md to RST with Mermaid preprocessing..."
            python3 preprocess-md.py README.md README_processed.md

            m2r2 README_processed.md --overwrite
            if [ -f README_processed.rst ]; then
              echo "Using existing README_processed.rst as index.rst..."
              cp README_processed.rst docs/source/index.rst
            else
              echo "‚ùå Conversion failed: README_processed.rst not found!"
              exit 1
            fi
          else
            echo "‚ùå No README found!"
            exit 1
          fi

          echo "üìù Generated index.rst contains:"
          head -20 docs/source/index.rst

      - name: Build Sphinx docs
        run: |
          cd docs
          sphinx-build -b html source ../public --keep-going -v || SPHINX_FAILED=1

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
